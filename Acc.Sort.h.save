#ifndef ACC_SORT_H_INCLUDED
#define ACC_SORT_H_INCLUDED

#include "Acc.Main.h"

union sort_union
{
    unsigned long ID;
    double value;
    date date;
    char type[CONF_MAX_LINE - CONF_LVAL_MAX];
};

enum sort_type
{
    SORT_BY_ID = 210, SORT_BY_DATE, SORT_BY_VALUE, SORT_BY_TYPE /*, DESCR*/
};

enum sort_direction
{
    ASC = 4588, DESC = 8854 /*ascending and descending*/
};

struct sort_element
{
    enum sort_type    type;
    union sort_union  data;
    REC *             rec_ptr;
};

/*types definition*/
typedef enum sort_direction  SortDrection;
typedef struct sort_element  SortElement;
typedef struct sort_element* SortArray;

/*function interface*/
bool CreateSortArray(SortArray s, unsigned long aNumOfItems);
void DisposeSortArray(SortArray s);

int Traverse_SortArray(const SortArray arr, unsigned long num, void (*func)(SortElement sl));
int Traverse_SortArray_Default(const SortArray arr, unsigned long num);
int QuckSort(SortArray arr, unsigned long num,  int (*comp)(const SortElement* a, const SortElement* b));
int QuckSort_Default(SortArray arr, unsigned long num);
int PrintSortElement(SortElement sl);

#endif // ACC_SORT_H_INCLUDED
